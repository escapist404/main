一、程序组成：
    总程序由两部分组成：
        1.图像及数据：
            (1)block.png:绘制边界及障碍；
            (2)character.png:绘制起点及终点；
            (3)maze.out:用点之间的连边描述一张图，用于printMap.py的初始化以及data.out的生成；
            (4)data.out:用01矩阵描述一张图，其中1为障碍物，0为通道。
        2.主程序：
            (1)CreateMap.cpp:生成maze.out；
            (2)printMap.py:生成data.out，以及绘制可视化地图；
            (3)main.py:对整体进行操作，含有对起点的上下左右移动操作；
            (4)user.py:用户进行使用的部分，其中调用了main.py中的类以执行可视化操作。

二、程序使用：
    0.生成地图：运行CreateMap.cpp用于生成maze.out（非必要）；
    1.进入user.py对代码进行编程；
    2.在user.py的主函数中先运行Main.init()以初始化地图，
        执行完用户的程序后再执行Main.run()用于检验结束位置是否合法。

三、输入格式：
    对于maze.out:
        第一行输入两个整数 row,column，分别表示行数和列数；
        第二行输入一个整数 counts，表示路径数量；
        第三行输入四个整数 x1,y1,x2,y2，表示起点为(x1,y1)，终点为(x2,y2)；
        接下来 counts 行，每行四个整数 x1,y1,x2,y2，表示有一条从(x1,y1)到(x2,y2)的边。

    对于data.out:
        一共输入 2 * column 行。
        每行输入 2*row 个数字，表示是否存在障碍，保证数字为 0 或 1。

四、注意事项：
    1.地图上点与点之间连边会存在一条边大小的间隔，这意味着每次移动在地图和01矩阵上显示的都是跨越两格；
    2.如1.所示，01矩阵中点与点之间存在一条边的间隔，请注意你的操作格式。

